@using NovaLab.Services.Api
@using Serilog
@using Blazorise

@inherits ComponentBase

@inject HttpClient Http
@inject ILogger logger
@inject NavigationManager NavigationManager
@inject NovaLabApiService apiService

@attribute [StreamRendering]

<Row>
    <Column ColumnSize="ColumnSize.Is2">
        <Button Color="Color.Primary" @onclick="OnClickCallback">Refresh Twitch Access Token</Button>
    </Column>
    <Column ColumnSize="ColumnSize.Is1" Style="display: flex">
        <IconLoadingState State="@_iconState"></IconLoadingState>
    </Column>
</Row>

@code {
    [Parameter]
    public required string UserId { get; set; }

    private IconLoadingState.StateEnum _iconState = IconLoadingState.StateEnum.Undefined;

    // -----------------------------------------------------------------------------------------------------------------
    // Methods
    // -----------------------------------------------------------------------------------------------------------------
    private async Task OnClickCallback() {
        try {
            _iconState = IconLoadingState.StateEnum.Loading;
            bool result = await apiService.RefreshTwitchAccessToken(UserId);
            _iconState = result
                ? IconLoadingState.StateEnum.Success
                : IconLoadingState.StateEnum.Failure;
        }
        catch (Exception e) {
            logger.Error(e, "An Exception occured");
            _iconState = IconLoadingState.StateEnum.Failure;
        }
    }
}